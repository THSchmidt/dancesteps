#!/usr/bin/perl -w

# Copyright 2015 Thomas H. Schmidt
#
# This file is part of DanceSteps.
#
# DanceSteps is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# any later version.
#
# DanceSteps is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with DanceSteps; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


### Load Packages ##############################################################
use strict;
use IO::Handle;
use FindBin qw($RealBin); # Absolute path to THIS script.
use LWP::Simple;
use lib ($RealBin."/modules/FileIO", $RealBin."/modules");
autoflush STDOUT 1; # For direct output.

use Commandline;
use Statistics;
################################################################################



### Default Parameters #########################################################
our $version        = "1a";               # Version number.
our $year           = "2015";             # Year (of change).

our $verbose        = 0;                  # Be loud and noisy (and global); default: silent.
our $copyright      = 0;                  # Print copyright information.

my $helpAndQuit     = 0;                  # Print out program help.

my $pdbIdFile       = 'pdbids.txt';       # Input PDB ID list file.
################################################################################



### Internal parameters ########################################################
my @pdbIds;            # Filled by "readPdbListFile(<PDBLISTFILE>)".
#my %coordData;         # Filled by "GROFiles::readGro(<GROFILE>)".
#my @ndxData;           # Filled by "NDXFiles::readNdx(<NDXFILE>)".
#my @thickNdxGroupIds;  # Filled by "NDXFiles::selectGroupIds(...)".
################################################################################



### Print out program headlines ################################################
printHead();
################################################################################



### Handle commandline parameters ##############################################
addCmdlParam('scalar', 'f',        'Input',      \$pdbIdFile,        $pdbIdFile, 'PDB ID list file: dat');
addCmdlParam('flag',   'h',        'bool',       \$helpAndQuit,      $helpAndQuit ? 'yes' : 'no', 'Print help info and quit');
addCmdlParam('flag',   'copyright','bool',       \$copyright,        $copyright ? 'yes' : 'no', 'Print copyright information');
addCmdlParam('flag',   'v',        'bool',       \$verbose,          $verbose ? 'yes' : 'no', 'Be loud and noisy');

cmdlParser();
################################################################################



### Print program help if the user set the flag ################################
printHelp(getCmdlParamRef(), 1) if $helpAndQuit;
################################################################################



### 
@pdbIds = readPdbListFile($pdbIdFile);

my $pdbFileDir = "pdbfiles";
mkdir($pdbFileDir);

foreach (@pdbIds) {
    print $$_{'id'} . "\n";
    my $pdbDownlFile = $pdbFileDir . "/" . $$_{'id'} . ".pdb";
    my $pdbFile      = $pdbFileDir . "/" . $$_{'id'} . "_chain" . $$_{'chain'} . ".pdb";


    ### Download PDB file and extract chains ###################################
    my $tmpUrl = "http://www.rcsb.org/pdb/download/downloadFile.do?fileFormat=pdb&compression=NO&structureId=" . $$_{'id'};
    #getstore($tmpUrl, $pdbFile);
    system("perl ../extract_chainseq/extract_chainseq -p $pdbDownlFile >>log.out 2>&1");
    ############################################################################



    ### Analyze using GROMACS ##################################################
    system("echo 0 | gmx gyrate -s $pdbFile -f $pdbFile -o gyrate." . $$_{'id'} . "_chain" . $$_{'chain'} . ".xvg -p >>log.out 2>&1");

    my @radii = readGyrateFile("gyrate." . $$_{'id'} . "_chain" . $$_{'chain'} . ".xvg");
    my $radiiAvg = ($radii[0]+$radii[1]+$radii[2])/3;
    my @statistics = Statistics::all(\@radii);
    print "$statistics[0] $statistics[1] $statistics[2] = " . $radiiAvg . "\n";
    ############################################################################
}
################################################################################


exit;

sub readGyrateFile {
    my $gyrateFile = shift;
    my @radii;

    open(GYRATEFILE, "<$gyrateFile") || die "ERROR: Cannot open radius of gyration XVG file \"$gyrateFile\": $!\n";
    while (<GYRATEFILE>) {
        if ($_ =~ /\d+\s+[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?\s+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)\s+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)\s+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)/) {
            $radii[0] = $2;
            $radii[1] = $4;
            $radii[2] = $6;
        }
    }
    close(GYRATEFILE);

    return @radii;
}


sub readPdbListFile {

    my @pdbIds;
    @pdbIds = ( { 'id'    => '1MBO',
                  'chain' => 'A' },
                { 'id'    => '2AVZ',
                  'chain' => 'A' },
                { 'id'    => '4WMT',
                  'chain' => 'A' } );
    return @pdbIds;
}

################################################################################
### Subroutines ################################################################
################################################################################
sub printHead {
    my @headLines = ("################################################################################",
                     "",
                     "Pachanga $version",
                     ".",
                     "Copyright Thomas H. Schmidt, $year",
                     "",
                     "http://github.com/THSchmidt/dancesteps",
                     "",
                     "This program is part of DanceSteps. DanceSteps is free software.",
                     "DanceSteps comes with ABSOLUTELY NO WARRANTY.",
                     "This is free software, and you are welcome to redistribute it",
                     "under certain conditions; type `--copyright' for details.",
                     "",
                     "################################################################################");
    my $maxLength = 80;
    foreach (@headLines) {
        $maxLength = (length $_ > $maxLength) ? length($_) : $maxLength;
    }

    foreach (@headLines) {
        printf "%s%-${maxLength}s\n", ' ' x int(($maxLength - length($_))/2), $_;
    }
}



sub printFoot {
    print <<EndOfFoot;
Please cite:
  [1] Schmidt, T.H. DanceSteps: Dirty toolkit for Molecular Modeling (Manual)

EndOfFoot
}



sub printHelp {
    my $cmdLParamRef   = shift;
    my $quitAfterPrint = shift;


    print <<EndOfHelp;
DESCRIPTION
-----------
Pachanga reads a list of PDB file IDs (e.g. received from the PISCES server),
downloads each structure, extracts the chains, and analyzes the chain as defined
in the PDB file list using the GROMACS tools gmx sasa and gyrate.
If the molecule exhibits a globular conformation, the resulting volume is used
to compute the diameter.


USAGE: pachanga -f PDBLISTFILE -o OUTPUTFILE

EndOfHelp

    printParamHelp($cmdLParamRef);

    printFoot();

    exit if $quitAfterPrint;
}



sub printCopyright {
    print <<"EndOfCopyright";
This file is part of DanceSteps.

DanceSteps is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
any later version.

DanceSteps is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with DanceSteps; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
EndOfCopyright
    exit;
}

